{"title":"'Fuck'","date":"2019-10-30T16:24:16.000Z","link":"2019/10/31/安全权限框架之-shiro","tags":["Java","Shiro","SpringBoot"],"updated":"2019-10-31T08:20:33.697Z","content":"<h1 id=\"安全权限框架之-springboot整合shiro\">安全权限框架之-springboot整合shiro<a href=\"2019/10/31/安全权限框架之-shiro#安全权限框架之-springboot整合shiro\"></a></h1><p><img src=\"http://148.70.50.70/source/1571404808823.jpg\" alt=\"image.png\" class=\"article-img\"></p>\n<p><strong>Subject</strong>：可以理解为与shiro打交道的对象，该对象封装了一些对方的信息，shiro可以通过subject拿到这些信息</p>\n<p><strong>SecurityManage</strong>r：Shiro的总经理，通过指使Authorizer和Authenticator等对subject进行授权和身份验证等工作</p>\n<a id=\"more\"></a>\n\n<p><strong>Realm</strong>：管理着一些如用户、角色、权限等重要信息，Shiro中所需的这些重要信息都是从Realm这里获取的，Realm本质上就是一个重要信息的数据源</p>\n<p><strong>Authenticator</strong>：认证器，负责Subject的认证操作，认证过程就是根据Subject提供的信息通过Realm查询到相关信息，然后做对比，支持扩展</p>\n<p><strong>Authorizer</strong>：授权器，控制着Subject对服务资源的访问权限</p>\n<p><strong>SessionManager</strong>：用于管理Session，这个Session可以是web的也可以不是web的。</p>\n<p><strong>SessionDao</strong>：把Session的 CRUD和存储介质联系起来的工具，存储介质可以是数据库，也可以是缓存，比如把session放到redis里面</p>\n<p><strong>CacheManager</strong>：缓存控制器，Realm管理的数据（用户、角色、权限）可以放到缓存里由CacheManager管理，提高认证授权等的速度</p>\n<p><strong>Cryptography</strong>：加密组件，Shiro提供了很多加解密算法的组件</p>\n<h3 id=\"接下来我们开始简单的整合\">接下来我们开始简单的整合<a href=\"2019/10/31/安全权限框架之-shiro#接下来我们开始简单的整合\"></a></h3><h4 id=\"pom-xml添加\">pom.xml添加<a href=\"2019/10/31/安全权限框架之-shiro#pom-xml添加\"></a></h4><figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.apache.shiro<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>shiro-spring<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>1.3.2<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">​```java</span><br><span class=\"line\">#### 第一步就是手写一个配置类，命名为ShiroConfig</span><br><span class=\"line\">​```java</span><br><span class=\"line\">import org.apache.shiro.spring.web.ShiroFilterFactoryBean;</span><br><span class=\"line\">import org.apache.shiro.web.mgt.DefaultWebSecurityManager;</span><br><span class=\"line\">import org.springframework.context.annotation.Bean;</span><br><span class=\"line\">import org.springframework.context.annotation.Configuration;</span><br><span class=\"line\"></span><br><span class=\"line\">import java.util.LinkedHashMap;</span><br><span class=\"line\">import java.util.Map;</span><br><span class=\"line\"></span><br><span class=\"line\">@Configuration</span><br><span class=\"line\">public class ShiroConfig &#123;</span><br><span class=\"line\">    @Bean(name = \"shiroFilter\")</span><br><span class=\"line\">    public ShiroFilterFactoryBean shiroFilter()&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        ShiroFilterFactoryBean shiroFilterFactoryBean = new ShiroFilterFactoryBean();</span><br><span class=\"line\">        shiroFilterFactoryBean.setSecurityManager(securityManager());</span><br><span class=\"line\">        shiroFilterFactoryBean.setLoginUrl(\"/none\");</span><br><span class=\"line\">        shiroFilterFactoryBean.setUnauthorizedUrl(\"/none\");</span><br><span class=\"line\">        Map<span class=\"tag\">&lt;<span class=\"name\">String,String</span>&gt;</span> map = new LinkedHashMap<span class=\"tag\">&lt;<span class=\"name\">String,String</span>&gt;</span>();</span><br><span class=\"line\">        /*anon表示可以匿名访问，authc表示必须认证通过才能访问*/</span><br><span class=\"line\">        map.put(\"/list\",\"anon\");</span><br><span class=\"line\">        map.put(\"/login\",\"anon\");</span><br><span class=\"line\">        map.put(\"/info\",\"authc\");</span><br><span class=\"line\">        /*这行代码需要放在所有权限设置的最后，不然会导致所有的url被拦截，剩余的都需要认证*/</span><br><span class=\"line\">        map.put(\"/**\",\"authc\");</span><br><span class=\"line\">        shiroFilterFactoryBean.setFilterChainDefinitionMap(map);</span><br><span class=\"line\"></span><br><span class=\"line\">        return shiroFilterFactoryBean;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    @Bean(name = \"securityManager\")</span><br><span class=\"line\">    public DefaultWebSecurityManager securityManager() &#123;</span><br><span class=\"line\">        DefaultWebSecurityManager defaultWebSecurityManager = new DefaultWebSecurityManager();</span><br><span class=\"line\">        defaultWebSecurityManager.setRealm(realm());</span><br><span class=\"line\">        return defaultWebSecurityManager;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    @Bean(name = \"realm\")</span><br><span class=\"line\">    public Realm realm() &#123;</span><br><span class=\"line\">        return new Realm();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></div></figure>\n<p>这里有三个Bean，需要自己操作的就是shiroFilter和realm，shiroFilter设置过滤器，realm是一个继承AuthorizingRealm的类，需要实现两个方法doGetAuthorizationInfo和doGetAuthenticationInfo执行授权与认证。除此之外，设置了四个url  /none /list /login /info,<br>/none为未登录与认证跳转的url，/list和/login为不用认证的url，/info为需要认证的url。</p>\n<h4 id=\"接下来手写Realm类\">接下来手写Realm类<a href=\"2019/10/31/安全权限框架之-shiro#接下来手写Realm类\"></a></h4><figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> org.apache.shiro.SecurityUtils;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.apache.shiro.authc.*;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.apache.shiro.authz.AuthorizationInfo;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.apache.shiro.authz.SimpleAuthorizationInfo;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.apache.shiro.realm.AuthorizingRealm;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.apache.shiro.subject.PrincipalCollection;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.HashMap;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.HashSet;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Set;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Realm</span> <span class=\"keyword\">extends</span> <span class=\"title\">AuthorizingRealm</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> AuthorizationInfo <span class=\"title\">doGetAuthorizationInfo</span><span class=\"params\">(PrincipalCollection principalCollection)</span> </span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">\"执行授权逻辑\"</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/*身份认证*/</span></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> AuthenticationInfo <span class=\"title\">doGetAuthenticationInfo</span><span class=\"params\">(AuthenticationToken authenticationToken)</span> <span class=\"keyword\">throws</span> AuthenticationException </span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">\"执行认证逻辑\"</span>);</span><br><span class=\"line\">        <span class=\"comment\">/*这里账户密码模拟数据库*/</span></span><br><span class=\"line\">        String username = <span class=\"string\">\"qwer\"</span>;</span><br><span class=\"line\">        String password = <span class=\"string\">\"1234\"</span>;</span><br><span class=\"line\">        <span class=\"comment\">/*获取用户认证传来的封装的账户密码令牌*/</span></span><br><span class=\"line\">        UsernamePasswordToken token = (UsernamePasswordToken)authenticationToken;</span><br><span class=\"line\">        <span class=\"comment\">/*返回用户名不存在，底层抛出UnKnowAccountException异常*/</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span>(!token.getUsername().equals(username))&#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> SimpleAuthenticationInfo(<span class=\"string\">\"\"</span>,password,<span class=\"string\">\"\"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></div></figure>\n<h4 id=\"Controller，在Controller中写刚刚的几个url\">Controller，在Controller中写刚刚的几个url<a href=\"2019/10/31/安全权限框架之-shiro#Controller，在Controller中写刚刚的几个url\"></a></h4><figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> org.apache.shiro.SecurityUtils;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.apache.shiro.authc.*;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.apache.shiro.subject.Subject;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.data.redis.core.RedisTemplate;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.data.redis.core.StringRedisTemplate;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.web.bind.annotation.*;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.ArrayList;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.HashMap;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.List;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.concurrent.TimeUnit;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@RestController</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">test</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@RequestMapping</span>(<span class=\"string\">\"/list\"</span>)</span><br><span class=\"line\">    <span class=\"keyword\">public</span> List&lt;HashMap&lt;String,Integer&gt;&gt; Map()&#123;</span><br><span class=\"line\">        List&lt;HashMap&lt;String,Integer&gt;&gt; list = <span class=\"keyword\">new</span> ArrayList&lt;&gt;();</span><br><span class=\"line\">        HashMap&lt;String,Integer&gt; map = <span class=\"keyword\">new</span> HashMap&lt;&gt;();</span><br><span class=\"line\">        map.put(<span class=\"string\">\"One\"</span>,<span class=\"number\">1</span>);</span><br><span class=\"line\">        map.put(<span class=\"string\">\"Two\"</span>,<span class=\"number\">2</span>);</span><br><span class=\"line\">        map.put(<span class=\"string\">\"Three\"</span>,<span class=\"number\">3</span>);</span><br><span class=\"line\">        HashMap&lt;String,Integer&gt; map0 = <span class=\"keyword\">new</span> HashMap&lt;&gt;();</span><br><span class=\"line\">        map0.put(<span class=\"string\">\"One\"</span>,<span class=\"number\">1</span>);</span><br><span class=\"line\">        map0.put(<span class=\"string\">\"Two\"</span>,<span class=\"number\">2</span>);</span><br><span class=\"line\">        map0.put(<span class=\"string\">\"Three\"</span>,<span class=\"number\">3</span>);</span><br><span class=\"line\">        list.add(map);</span><br><span class=\"line\">        list.add(map0);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> list;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@RequestMapping</span>(<span class=\"string\">\"/none\"</span>)</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">none</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">\"You can't get the service\"</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@RequestMapping</span>(<span class=\"string\">\"/info\"</span>)</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">info</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">\"This is info required login\"</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@RequestMapping</span>(<span class=\"string\">\"/login\"</span>)</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">Login</span><span class=\"params\">(@RequestParam(<span class=\"string\">\"username\"</span>)</span> String username,@<span class=\"title\">RequestParam</span><span class=\"params\">(<span class=\"string\">\"password\"</span>)</span>String password)</span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">/*创建一个subject*/</span></span><br><span class=\"line\">        Subject subject = SecurityUtils.getSubject();</span><br><span class=\"line\">        <span class=\"comment\">/*封装用户数据*/</span></span><br><span class=\"line\">        UsernamePasswordToken token = <span class=\"keyword\">new</span> UsernamePasswordToken(username,password);</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            <span class=\"comment\">/*执行登录,然后这里会跳转到Realm的认证逻辑中*/</span></span><br><span class=\"line\">            subject.login(token);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"string\">\"登陆成功\"</span>;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (UnknownAccountException uae) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"string\">\"未知账户\"</span>;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (IncorrectCredentialsException ice) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"string\">\"密码不正确\"</span>;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (LockedAccountException lae) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"string\">\"账户已锁定\"</span>;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (ExcessiveAttemptsException eae) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"string\">\"用户名或密码错误次数过多\"</span>;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (AuthenticationException ae) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"string\">\"用户名或密码不正确！\"</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></div></figure>\n<h4 id=\"接下来使用postman进行接口测试\">接下来使用postman进行接口测试<a href=\"2019/10/31/安全权限框架之-shiro#接下来使用postman进行接口测试\"></a></h4><h5 id=\"输入不需要认证的url-“-list”进行测试\">输入不需要认证的url “/list”进行测试<a href=\"2019/10/31/安全权限框架之-shiro#输入不需要认证的url-“-list”进行测试\"></a></h5><p><img src=\"http://148.70.50.70/source/1571623692995.jpg\" alt=\"image.png\"><br>顺利获取接口提供数据</p>\n<h5 id=\"输入需要认证的url进行测试\">输入需要认证的url进行测试<a href=\"2019/10/31/安全权限框架之-shiro#输入需要认证的url进行测试\"></a></h5><p><img src=\"http://148.70.50.70/source/1571623564852.jpg\" alt=\"image.png\"><br>发现跳转到了/none页面，这是因为未执行认证。</p>\n<h5 id=\"现在开始认证\">现在开始认证<a href=\"2019/10/31/安全权限框架之-shiro#现在开始认证\"></a></h5><p><img src=\"http://148.70.50.70/source/1571623796384.jpg\" alt=\"image.png\"><br>认证成功</p>\n<h5 id=\"再次输入需要认证的url-“-info”\">再次输入需要认证的url “/info”<a href=\"2019/10/31/安全权限框架之-shiro#再次输入需要认证的url-“-info”\"></a></h5><p><img src=\"http://148.70.50.70/source/1571623838500.jpg\" alt=\"image.png\"><br>成功获取接口数据</p>\n<h4 id=\"角色和权限的关系（转载）\">角色和权限的关系（转载）<a href=\"2019/10/31/安全权限框架之-shiro#角色和权限的关系（转载）\"></a></h4><p><img src=\"http://148.70.50.70/source/1571672890938.jpg\" alt=\"image.png\" class=\"article-img\"></p>\n<h4 id=\"Shiro-md5加密，加盐\">Shiro md5加密，加盐<a href=\"2019/10/31/安全权限框架之-shiro#Shiro-md5加密，加盐\"></a></h4><p>安全起见，一般数据库中都不会保存明文的密码，通过md5这种非对称性算法，将密码加密后存储到数据库中，这种非对称性加密是单向的，通过转换后的密码无法解密成真实密码，所以用户如果忘记密码无法找回密码。但是只用md5加密有可能造成许多用户的密码重复，如一些简单的1234诸如此类的密码，所以再次通过数据库中唯一的id来加盐，达到密码唯一的效果。</p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> org.apache.shiro.crypto.hash.SimpleHash;</span><br><span class=\"line\"> </span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">demo</span> </span>&#123;</span><br><span class=\"line\"> </span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">String password = <span class=\"string\">\"admin\"</span>;<span class=\"comment\">//明码</span></span><br><span class=\"line\">String algorithmName = <span class=\"string\">\"MD5\"</span>;<span class=\"comment\">//加密算法</span></span><br><span class=\"line\">Object source = password;<span class=\"comment\">//要加密的密码</span></span><br><span class=\"line\"> </span><br><span class=\"line\">Object salt = <span class=\"string\">\"admin\"</span>;<span class=\"comment\">//盐值，一般都是用户名或者userid，要保证唯一</span></span><br><span class=\"line\"><span class=\"keyword\">int</span> hashIterations = <span class=\"number\">1024</span>;<span class=\"comment\">//加密次数</span></span><br><span class=\"line\"> </span><br><span class=\"line\">SimpleHash simpleHash = <span class=\"keyword\">new</span> SimpleHash(algorithmName,source,salt,hashIterations);</span><br><span class=\"line\">System.out.println(simpleHash);<span class=\"comment\">//打印出经过盐值、加密次数、md5后的密码</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></div></figure>\n<h3 id=\"那么最基本的使用已经说完了，现在开始实战部分\">那么最基本的使用已经说完了，现在开始实战部分<a href=\"2019/10/31/安全权限框架之-shiro#那么最基本的使用已经说完了，现在开始实战部分\"></a></h3><h4 id=\"首先是数据库设计，先给出一个简单的数据表\">首先是数据库设计，先给出一个简单的数据表<a href=\"2019/10/31/安全权限框架之-shiro#首先是数据库设计，先给出一个简单的数据表\"></a></h4><figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">DROP TABLE IF EXISTS `user_role` ;</span><br><span class=\"line\">DROP TABLE IF EXISTS `role_permission` ;</span><br><span class=\"line\">DROP TABLE IF EXISTS `user` ;</span><br><span class=\"line\">DROP TABLE IF EXISTS `role` ;</span><br><span class=\"line\">DROP TABLE IF EXISTS `permission` ;</span><br><span class=\"line\"></span><br><span class=\"line\"># 用户表</span><br><span class=\"line\">CREATE TABLE `user` (`id` BIGINT PRIMARY KEY NOT NULL ,`username` VARCHAR (20),`password` VARCHAR(300));</span><br><span class=\"line\"># 角色表</span><br><span class=\"line\">CREATE TABLE `role` (`id` BIGINT PRIMARY KEY NOT NULL ,`description` VARCHAR(3600),`role` VARCHAR(3600));</span><br><span class=\"line\"># 权限表</span><br><span class=\"line\">CREATE TABLE `permission` (`id` BIGINT PRIMARY KEY NOT NULL ,`name` VARCHAR(200),`description` VARCHAR(3600));</span><br><span class=\"line\"># 用户角色表</span><br><span class=\"line\">CREATE TABLE `user_role` (`user_id` BIGINT, `role_id` BIGINT,</span><br><span class=\"line\">    FOREIGN KEY (`user_id`) REFERENCES `user`(`id`),</span><br><span class=\"line\">        FOREIGN KEY (`role_id`) REFERENCES `role`(`id`));</span><br><span class=\"line\"># 角色权限表</span><br><span class=\"line\">CREATE TABLE `role_permission` (`role_id` BIGINT, `permission_id` BIGINT,</span><br><span class=\"line\">                          FOREIGN KEY (`role_id`) REFERENCES `role`(`id`),</span><br><span class=\"line\">                          FOREIGN KEY (`permission_id`) REFERENCES `permission`(`id`));</span><br><span class=\"line\"></span><br><span class=\"line\"># 一个用户可以有多个角色，每个角色有不同的权限，可以有多个权限</span><br><span class=\"line\">INSERT `user` (id, username, password) VALUES (10000,&apos;normal&apos;,&apos;1234&apos;);</span><br><span class=\"line\">INSERT `user` (id, username, password) VALUES (10001,&apos;vip1&apos;,&apos;1234&apos;);</span><br><span class=\"line\">INSERT `user` (id, username, password) VALUES (10002,&apos;vip2&apos;,&apos;1234&apos;);</span><br><span class=\"line\"></span><br><span class=\"line\">INSERT `role` (id, description, role) VALUES (10000,&apos;没啥权限，底层贫穷用户。&apos;,&apos;普通用户&apos;);</span><br><span class=\"line\">INSERT `role` (id, description, role) VALUES (10001,&apos;vip黄金会员，拥有观看独播视频和更换皮肤的功能。&apos;,&apos;vip黄金会员&apos;);</span><br><span class=\"line\">INSERT `role` (id, description, role) VALUES (10002,&apos;vip白金会员，拥有vip黄金会员的所有权限，还有不限速功能&apos;,&apos;vip白金会员&apos;);</span><br><span class=\"line\"></span><br><span class=\"line\"># INSERT `permission` (id, name, description) VALUES (10000,&apos;normal&apos;,&apos;观看普通视频&apos;);</span><br><span class=\"line\">INSERT `permission` (id, name, description) VALUES (10000,&apos;vip1&apos;,&apos;观看独播视频&apos;);</span><br><span class=\"line\">INSERT `permission` (id, name, description) VALUES (10001,&apos;vip1&apos;,&apos;更换高级皮肤&apos;);</span><br><span class=\"line\">INSERT `permission` (id, name, description) VALUES (10002,&apos;vip2&apos;,&apos;缓存不限速&apos;);</span><br><span class=\"line\"></span><br><span class=\"line\"># 添加角色权限</span><br><span class=\"line\">INSERT `role_permission` (role_id, permission_id) VALUES (10001, 10000);</span><br><span class=\"line\">INSERT `role_permission` (role_id, permission_id) VALUES (10001, 10001);</span><br><span class=\"line\"></span><br><span class=\"line\">INSERT `role_permission` (role_id, permission_id) VALUES (10002, 10000);</span><br><span class=\"line\">INSERT `role_permission` (role_id, permission_id) VALUES (10002, 10001);</span><br><span class=\"line\">INSERT `role_permission` (role_id, permission_id) VALUES (10002, 10002);</span><br><span class=\"line\"></span><br><span class=\"line\"># 添加用户角色</span><br><span class=\"line\">INSERT `user_role` (user_id, role_id) VALUES (10000, 10000);</span><br><span class=\"line\">INSERT `user_role` (user_id, role_id) VALUES (10001, 10001);</span><br><span class=\"line\">INSERT `user_role` (user_id, role_id) VALUES (10002, 10002);</span><br><span class=\"line\"></span><br><span class=\"line\"># 获取角色id</span><br><span class=\"line\">SELECT `user_role`.`role_id` FROM `user_role` WHERE `user_id` = 10001;</span><br><span class=\"line\"># 获取该角色的权限</span><br><span class=\"line\">SELECT `role_permission`.`permission_id` FROM `role_permission` WHERE `role_id` IN(SELECT `user_role`.`role_id` FROM `user_role` WHERE `user_id` = 10000);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">SELECT `role`.`role` FROM `role` WHERE `role`.`id` IN (SELECT `user_role`.`role_id` FROM `user_role` WHERE `user_id` = 10002);</span><br><span class=\"line\"></span><br><span class=\"line\">SELECT `permission`.* FROM `permission` WHERE `permission`.`id` IN</span><br><span class=\"line\">    (SELECT `role_permission`.`permission_id` FROM `role_permission` WHERE `role_id` IN</span><br><span class=\"line\">        (SELECT `role`.`id` FROM `role` WHERE `role`.`id` IN</span><br><span class=\"line\">            (SELECT `user_role`.`role_id` FROM `user_role` WHERE `user_id` = 10001)));</span><br><span class=\"line\"></span><br><span class=\"line\">SELECT * FROM user;</span><br></pre></td></tr></table></div></figure>\n<p>这就是一个简单的数据库设计，需要五张表</p>\n<blockquote>\n<p>user -用户表</p>\n</blockquote>\n<blockquote>\n<p>role -角色表</p>\n</blockquote>\n<blockquote>\n<p>permission -权限表</p>\n</blockquote>\n<blockquote>\n<p>user_role -用户角色表</p>\n</blockquote>\n<blockquote>\n<p>role_permission -角色权限表</p>\n</blockquote>\n<p>用户表就是普通的用户表</p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">User</span> <span class=\"keyword\">implements</span> <span class=\"title\">Serializable</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> Integer id;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String username;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String password;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/*get and set*/</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></div></figure>\n<p>角色表</p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Role</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">int</span> id;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String description;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String role;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/*get and set*/</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></div></figure>\n<p>权限表</p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Permission</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> Integer id;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String name;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String description;</span><br><span class=\"line\">    <span class=\"comment\">/*get and set*/</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></div></figure>\n<p>其他两个表不用创建实体类，这里的用户可以对应多个角色，每个角色可以对应多个权限，比如腾讯QQ的普通用户和vip用户，普通用户无法享受更换高级装饰的功能，但是vip用户可以。在这里，普通用户和vip用户是角色，更换高级装饰功能是权限，是vip特有的权限，所以数据表user_role与role_permission要对应这种关系。</p>\n<h4 id=\"接下来要写几个接口，一个是通过用户id获取该用户所拥有的角色，一个是通过用户id获取该用户角色拥有的权限，一个是通过用户名查找id（毕竟用户输入账户不会输入id）\">接下来要写几个接口，一个是通过用户id获取该用户所拥有的角色，一个是通过用户id获取该用户角色拥有的权限，一个是通过用户名查找id（毕竟用户输入账户不会输入id）<a href=\"2019/10/31/安全权限框架之-shiro#接下来要写几个接口，一个是通过用户id获取该用户所拥有的角色，一个是通过用户id获取该用户角色拥有的权限，一个是通过用户名查找id（毕竟用户输入账户不会输入id）\"></a></h4><h5 id=\"DAO数据层使用简单的-Mapper注解\">DAO数据层使用简单的@Mapper注解<a href=\"2019/10/31/安全权限框架之-shiro#DAO数据层使用简单的-Mapper注解\"></a></h5><figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Select</span>(<span class=\"string\">\"SELECT `permission`.* FROM `permission` WHERE `permission`.`id` IN\\n\"</span> +</span><br><span class=\"line\">        <span class=\"string\">\"    (SELECT `role_permission`.`permission_id` FROM `role_permission` WHERE `role_id` IN\\n\"</span> +</span><br><span class=\"line\">        <span class=\"string\">\"        (SELECT `role`.`id` FROM `role` WHERE `role`.`id` IN\\n\"</span> +</span><br><span class=\"line\">        <span class=\"string\">\"            (SELECT `user_role`.`role_id` FROM `user_role` WHERE `user_id` = #&#123;id&#125;)));\"</span>)</span><br><span class=\"line\"><span class=\"function\">List&lt;Permission&gt; <span class=\"title\">getPermissionByUserId</span><span class=\"params\">(Integer id)</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@Select</span>(<span class=\"string\">\"SELECT `role`.* FROM `role` WHERE `role`.`id` IN (SELECT `user_role`.`role_id` FROM `user_role` WHERE `user_id` = #&#123;id&#125;);\"</span>)</span><br><span class=\"line\"><span class=\"function\">List&lt;Role&gt; <span class=\"title\">getRoleByUserId</span><span class=\"params\">(Integer id)</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@Select</span>(<span class=\"string\">\"SELECT `user`.* FROM `user` WHERE `user`.`username` = #&#123;username&#125;;\"</span>)</span><br><span class=\"line\"><span class=\"function\">User <span class=\"title\">getUserByUsername</span><span class=\"params\">(String username)</span></span>;</span><br></pre></td></tr></table></div></figure>\n<h5 id=\"业务层接口\">业务层接口<a href=\"2019/10/31/安全权限框架之-shiro#业务层接口\"></a></h5><figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\">List&lt;Permission&gt; <span class=\"title\">getPermissionByUserId</span><span class=\"params\">(Integer id)</span></span>;</span><br><span class=\"line\"><span class=\"function\">List&lt;Role&gt; <span class=\"title\">getRoleByUserId</span><span class=\"params\">(Integer id)</span></span>;</span><br><span class=\"line\"><span class=\"function\">User <span class=\"title\">getUserByUsername</span><span class=\"params\">(String username)</span></span>;</span><br></pre></td></tr></table></div></figure>\n<h5 id=\"注入service业务层接口实现\">注入service业务层接口实现<a href=\"2019/10/31/安全权限框架之-shiro#注入service业务层接口实现\"></a></h5><figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Override</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> List&lt;Permission&gt; <span class=\"title\">getPermissionByUserId</span><span class=\"params\">(Integer id)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> userDao.getPermissionByUserId(id);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@Override</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> List&lt;Role&gt; <span class=\"title\">getRoleByUserId</span><span class=\"params\">(Integer id)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> userDao.getRoleByUserId(id);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@Override</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> User <span class=\"title\">getUserByUsername</span><span class=\"params\">(String username)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> userDao.getUserByUsername(username);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></div></figure>\n<h5 id=\"现在认证可以使用数据库了\">现在认证可以使用数据库了<a href=\"2019/10/31/安全权限框架之-shiro#现在认证可以使用数据库了\"></a></h5><figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*身份认证*/</span></span><br><span class=\"line\"><span class=\"meta\">@Override</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">protected</span> AuthenticationInfo <span class=\"title\">doGetAuthenticationInfo</span><span class=\"params\">(AuthenticationToken authenticationToken)</span> <span class=\"keyword\">throws</span> AuthenticationException </span>&#123;</span><br><span class=\"line\">    System.out.println(<span class=\"string\">\"执行认证逻辑\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    UsernamePasswordToken token = (UsernamePasswordToken)authenticationToken;</span><br><span class=\"line\"></span><br><span class=\"line\">    User user = userService.getUserByUsername(token.getUsername());</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(user == <span class=\"keyword\">null</span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/*设置用户session*/</span></span><br><span class=\"line\">    Session session = SecurityUtils.getSubject().getSession();</span><br><span class=\"line\">    session.setAttribute(<span class=\"string\">\"user\"</span>,user);</span><br><span class=\"line\">    System.out.println(session.getId());</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> SimpleAuthenticationInfo( (String)token.getPrincipal(), user.getPassword(),getName());</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></div></figure>\n<h5 id=\"授权\">授权<a href=\"2019/10/31/安全权限框架之-shiro#授权\"></a></h5><figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Override</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">protected</span> AuthorizationInfo <span class=\"title\">doGetAuthorizationInfo</span><span class=\"params\">(PrincipalCollection principalCollection)</span> </span>&#123;</span><br><span class=\"line\">    System.out.println(<span class=\"string\">\"执行授权逻辑\"</span>);</span><br><span class=\"line\">    SimpleAuthorizationInfo authorizationInfo = <span class=\"keyword\">new</span> SimpleAuthorizationInfo();</span><br><span class=\"line\">    String username = (String) SecurityUtils.getSubject().getPrincipal();</span><br><span class=\"line\"></span><br><span class=\"line\">    Set&lt;String&gt; roles = <span class=\"keyword\">new</span> HashSet&lt;&gt;();</span><br><span class=\"line\">    Set&lt;String&gt; permissions = <span class=\"keyword\">new</span> HashSet&lt;&gt;();</span><br><span class=\"line\"></span><br><span class=\"line\">    User user = userService.getUserByUsername(username);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/*获取并添加该用户角色*/</span></span><br><span class=\"line\">    List&lt;Role&gt; roleList = userService.getRoleByUserId(user.getId());</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(Role role: roleList)&#123;</span><br><span class=\"line\">        roles.add(role.getRole());</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/*获取并添加该用户权限*/</span></span><br><span class=\"line\">    List&lt;Permission&gt; permissionList = userService.getPermissionByUserId(user.getId());</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(Permission permission: permissionList)&#123;</span><br><span class=\"line\">        permissions.add(permission.getName());</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    authorizationInfo.addRoles(roles);</span><br><span class=\"line\">    authorizationInfo.addStringPermissions(permissions);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> authorizationInfo;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></div></figure>\n<p>这里添加的角色是role.getRole()，权限是permission.getName()，如果使用的字段不同，对应的角色与权限名也不同，比如role为”vip白金会员”，则需要”vip白金会员”这个角色字符串，permission为”vip1”则需要permission为”vip1”。<br>至此，已经通过用户登录后通过session保持会话，那么如何设置角色或者权限拦截呢？</p>\n<h4 id=\"有两种方法，一种是在控制层添加注解\">有两种方法，一种是在控制层添加注解<a href=\"2019/10/31/安全权限框架之-shiro#有两种方法，一种是在控制层添加注解\"></a></h4><figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@RequiresPermissions</span>(<span class=\"string\">\"vip1\"</span>)</span><br><span class=\"line\"><span class=\"meta\">@RequestMapping</span>(<span class=\"string\">\"/vip1\"</span>)</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">vip1</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">\"This is vip1 content(尊贵vip1接口)\"</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@RequiresPermissions</span>(<span class=\"string\">\"vip2\"</span>)</span><br><span class=\"line\"><span class=\"meta\">@RequestMapping</span>(<span class=\"string\">\"/vip2\"</span>)</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">vip2</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">\"This is vip2 content(尊贵vip2接口)\"</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@RequiresRoles</span>(<span class=\"string\">\"vip黄金会员\"</span>)</span><br><span class=\"line\"><span class=\"meta\">@RequestMapping</span>(<span class=\"string\">\"/vip1_role\"</span>)</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">vip1_role</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">\"This is vip 黄金会员\"</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></div></figure>\n<p>如果要使用注解，必须要在ShiroConfig中添加下面的代码开启注解，否则无效</p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*开启注解*/</span></span><br><span class=\"line\"><span class=\"meta\">@Bean</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> DefaultAdvisorAutoProxyCreator <span class=\"title\">advisorAutoProxyCreator</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    DefaultAdvisorAutoProxyCreator advisorAutoProxyCreator = <span class=\"keyword\">new</span> DefaultAdvisorAutoProxyCreator();</span><br><span class=\"line\">    advisorAutoProxyCreator.setProxyTargetClass(<span class=\"keyword\">true</span>);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> advisorAutoProxyCreator;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@Bean</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> AuthorizationAttributeSourceAdvisor <span class=\"title\">authorizationAttributeSourceAdvisor</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    AuthorizationAttributeSourceAdvisor authorizationAttributeSourceAdvisor = <span class=\"keyword\">new</span> AuthorizationAttributeSourceAdvisor();</span><br><span class=\"line\">    authorizationAttributeSourceAdvisor.setSecurityManager(securityManager());</span><br><span class=\"line\">    <span class=\"keyword\">return</span> authorizationAttributeSourceAdvisor;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></div></figure>\n\n<p>访问/vip1接口就需要所需权限，未登录情况下<br><img src=\"http://148.70.50.70/source/1571804377475.jpg\" alt=\"image.png\"><br>登陆后<br><img src=\"http://148.70.50.70/source/1571804400820.jpg\" alt=\"image.png\"><br>访问<br><img src=\"http://148.70.50.70/source/1571804418056.jpg\" alt=\"image.png\"></p>\n<p><img src=\"http://148.70.50.70/source/1571804434170.jpg\" alt=\"image.png\"><br>因为数据库中已经设定vip2也拥有vip1的所有权限，所以vip2用户可以访问vip1和vip2两个接口，但是如果登录vip1账户，只能访问vip1接口，vip2则访问不了。</p>\n<h4 id=\"另一种方法，在ShiroConfig中添加拦截页面，拦截页面已经在上面说过\">另一种方法，在ShiroConfig中添加拦截页面，拦截页面已经在上面说过<a href=\"2019/10/31/安全权限框架之-shiro#另一种方法，在ShiroConfig中添加拦截页面，拦截页面已经在上面说过\"></a></h4><figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">map.put(<span class=\"string\">\"/perms\"</span>,<span class=\"string\">\"perms[vip2]\"</span>);</span><br></pre></td></tr></table></div></figure>\n<p>这样就需要vip2的权限才能访问”/perms”这个接口了，添加角色拦截也是一样，甚至数据库两个表也行，就user与role两个表也能达到安全管理的作用。</p>\n<h5 id=\"设置没有权限返回的接口\">设置没有权限返回的接口<a href=\"2019/10/31/安全权限框架之-shiro#设置没有权限返回的接口\"></a></h5><p>添加一个抛出无权限异常的类</p>\n<figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*无权限异常抛出类*/</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@ControllerAdvice</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Exception</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@ExceptionHandler</span></span><br><span class=\"line\">    <span class=\"meta\">@ResponseBody</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">ErrotHandler</span><span class=\"params\">(AuthorizationException e)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">\"Sorry,you don't have permission.\"</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></div></figure>\n\n\n\n\n\n\n\n\n<h3 id=\"数据库表设计\">数据库表设计<a href=\"2019/10/31/安全权限框架之-shiro#数据库表设计\"></a></h3><h4 id=\"用户表\">用户表<a href=\"2019/10/31/安全权限框架之-shiro#用户表\"></a></h4><figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">CREATE TABLE `user` (</span><br><span class=\"line\">  `id` int(11) NOT NULL AUTO_INCREMENT,</span><br><span class=\"line\">  `user_id` varchar(20) NOT NULL COMMENT &apos;用户id&apos;,</span><br><span class=\"line\">  `username` varchar(50) NOT NULL COMMENT &apos;用户名&apos;,</span><br><span class=\"line\">  `password` varchar(50) NOT NULL,</span><br><span class=\"line\">  `salt` varchar(128) DEFAULT NULL COMMENT &apos;加密盐值&apos;,</span><br><span class=\"line\">  `email` varchar(50) DEFAULT NULL COMMENT &apos;邮箱&apos;,</span><br><span class=\"line\">  `phone` varchar(50) DEFAULT NULL COMMENT &apos;联系方式&apos;,</span><br><span class=\"line\">  `sex` int(255) DEFAULT NULL COMMENT &apos;年龄：1男2女&apos;,</span><br><span class=\"line\">  `age` int(3) DEFAULT NULL COMMENT &apos;年龄&apos;,</span><br><span class=\"line\">  `status` int(1) NOT NULL COMMENT &apos;用户状态：1有效; 2删除&apos;,</span><br><span class=\"line\">  `create_time` datetime DEFAULT NULL COMMENT &apos;创建时间&apos;,</span><br><span class=\"line\">  `update_time` datetime DEFAULT NULL COMMENT &apos;更新时间&apos;,</span><br><span class=\"line\">  `last_login_time` datetime DEFAULT NULL COMMENT &apos;最后登录时间&apos;,</span><br><span class=\"line\">  PRIMARY KEY (`id`,`user_id`)</span><br><span class=\"line\">) ENGINE=InnoDB AUTO_INCREMENT=24 DEFAULT CHARSET=utf8;</span><br></pre></td></tr></table></div></figure>\n<h4 id=\"角色表\">角色表<a href=\"2019/10/31/安全权限框架之-shiro#角色表\"></a></h4><figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">CREATE TABLE `role` (</span><br><span class=\"line\">  `id` int(11) NOT NULL AUTO_INCREMENT,</span><br><span class=\"line\">  `role_id` varchar(20) NOT NULL COMMENT &apos;角色id&apos;,</span><br><span class=\"line\">  `name` varchar(50) NOT NULL COMMENT &apos;角色名称&apos;,</span><br><span class=\"line\">  `description` varchar(255) DEFAULT NULL COMMENT &apos;角色描述&apos;,</span><br><span class=\"line\">  `status` int(1) NOT NULL COMMENT &apos;状态：1有效；2删除&apos;,</span><br><span class=\"line\">  `create_time` datetime DEFAULT NULL COMMENT &apos;创建时间&apos;,</span><br><span class=\"line\">  `update_time` datetime DEFAULT NULL COMMENT &apos;更新时间&apos;,</span><br><span class=\"line\">  PRIMARY KEY (`id`)</span><br><span class=\"line\">) ENGINE=InnoDB AUTO_INCREMENT=5 DEFAULT CHARSET=utf8;</span><br></pre></td></tr></table></div></figure>\n<h4 id=\"权限表\">权限表<a href=\"2019/10/31/安全权限框架之-shiro#权限表\"></a></h4><figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">CREATE TABLE `permission` (</span><br><span class=\"line\">  `id` int(11) NOT NULL AUTO_INCREMENT,</span><br><span class=\"line\">  `permission_id` varchar(20) NOT NULL COMMENT &apos;权限id&apos;,</span><br><span class=\"line\">  `name` varchar(100) NOT NULL COMMENT &apos;权限名称&apos;,</span><br><span class=\"line\">  `description` varchar(255) DEFAULT NULL COMMENT &apos;权限描述&apos;,</span><br><span class=\"line\">  `url` varchar(255) DEFAULT NULL COMMENT &apos;权限访问路径&apos;,</span><br><span class=\"line\">  `perms` varchar(255) DEFAULT NULL COMMENT &apos;权限标识&apos;,</span><br><span class=\"line\">  `parent_id` int(11) DEFAULT NULL COMMENT &apos;父级权限id&apos;,</span><br><span class=\"line\">  `type` int(1) DEFAULT NULL COMMENT &apos;类型   0：目录   1：菜单   2：按钮&apos;,</span><br><span class=\"line\">  `order_num` int(3) DEFAULT &apos;0&apos; COMMENT &apos;排序&apos;,</span><br><span class=\"line\">  `icon` varchar(50) DEFAULT NULL COMMENT &apos;图标&apos;,</span><br><span class=\"line\">  `status` int(1) NOT NULL COMMENT &apos;状态：1有效；2删除&apos;,</span><br><span class=\"line\">  `create_time` datetime DEFAULT NULL,</span><br><span class=\"line\">  `update_time` datetime DEFAULT NULL,</span><br><span class=\"line\">  PRIMARY KEY (`id`)</span><br><span class=\"line\">) ENGINE=InnoDB AUTO_INCREMENT=32 DEFAULT CHARSET=utf8;</span><br></pre></td></tr></table></div></figure>\n<h4 id=\"用户角色关系表\">用户角色关系表<a href=\"2019/10/31/安全权限框架之-shiro#用户角色关系表\"></a></h4><figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">CREATE TABLE `user_role` (</span><br><span class=\"line\">  `id` int(11) NOT NULL AUTO_INCREMENT,</span><br><span class=\"line\">  `user_id` varchar(20) NOT NULL COMMENT &apos;用户id&apos;,</span><br><span class=\"line\">  `role_id` varchar(20) NOT NULL COMMENT &apos;角色id&apos;,</span><br><span class=\"line\">  PRIMARY KEY (`id`)</span><br><span class=\"line\">) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8;</span><br></pre></td></tr></table></div></figure>\n<h4 id=\"角色权限关系表\">角色权限关系表<a href=\"2019/10/31/安全权限框架之-shiro#角色权限关系表\"></a></h4><figure class=\"highlight\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">CREATE TABLE `role_permission` (</span><br><span class=\"line\">  `id` int(11) NOT NULL AUTO_INCREMENT,</span><br><span class=\"line\">  `role_id` varchar(20) NOT NULL COMMENT &apos;角色id&apos;,</span><br><span class=\"line\">  `permission_id` varchar(20) NOT NULL COMMENT &apos;权限id&apos;,</span><br><span class=\"line\">  PRIMARY KEY (`id`)</span><br><span class=\"line\">) ENGINE=InnoDB AUTO_INCREMENT=869 DEFAULT CHARSET=utf8;</span><br></pre></td></tr></table></div></figure>\n<h4 id=\"session会话管理\">session会话管理<a href=\"2019/10/31/安全权限框架之-shiro#session会话管理\"></a></h4><p><img src=\"http://148.70.50.70/source/1571762848189.jpg\" alt=\"image.png\" class=\"article-img\"></p>\n","prev":{"title":"'整理了2019年Java面试题（集 合+并发+调优+微服务+spring+Redis）（转载）'","link":"2019/10/31/2019-10-31-整理了2019年Java面试题（集-合+并发+调优+微服务+spring+Redis）（转载）"},"plink":"http://yoursite.com/2019/10/31/安全权限框架之-shiro/","toc":[{"title":"安全权限框架之-springboot整合shiro","id":"安全权限框架之-springboot整合shiro","index":"1"}]}